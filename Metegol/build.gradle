buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    //    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.google.android.gms:play-services:6.5.87'
    //compile 'com.astuetz:pagerslidingtabstrip:1.0.+'
    compile project(':..:libraryPullToRefresh')
    compile project(':..:librarySliding')
    compile project(':..:viewflow_library')
    compile files('libs/appconversionsdk.jar')
    compile files('libs/commons-io-2.4.jar')
    compile files('libs/joda-time-2.2.jar')
    compile files('libs/libGoogleAnalyticsServices.jar')
    compile files('libs/openyoutubeactivity-1.1.jar')
    compile files('libs/twitter4j-core-3.0.3.jar')
    compile files('libs/universal-image-loader-1.8.4-with-sources.jar')
    compile files('libs/sdk-v1.0.0.jar')
    //compile 'com.facebook.android:facebook-android-sdk:4.0.+'
//    compile('com.crashlytics.sdk.android:crashlytics:2.2.3@aar') {
//        transitive = true;
//    }
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.jpardogo.materialtabstrip:library:1.0.9'
    compile 'com.mcxiaoke.volley:library:1.0.+'
    compile 'com.facebook.android:facebook-android-sdk:3.22.+'
    compile 'com.google.code.gson:gson:2.3.1'
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'
    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 19
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
    buildTypes {

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'
        }

    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        // abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    productFlavors {
    }
}
